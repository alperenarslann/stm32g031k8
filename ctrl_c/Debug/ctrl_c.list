
ctrl_c.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019c  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000004  0800019c  0800019c  0001019c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000004  080001a0  080001a0  000101a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000000  20000000  20000000  000101a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  20000000  20000000  00000000  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000101a4  2**0
                  CONTENTS, READONLY
  6 .debug_line   000000f3  00000000  00000000  000101cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000026  00000000  00000000  000102bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000014  00000000  00000000  000102e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_aranges 00000020  00000000  00000000  00010300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000054  00000000  00000000  00010320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000000 <vector_table>:
 8000000:	20002000 	.word	0x20002000
 8000004:	08000021 	.word	0x08000021
 8000008:	08000057 	.word	0x08000057
 800000c:	08000057 	.word	0x08000057
 8000010:	20000000 	.word	0x20000000
 8000014:	20000000 	.word	0x20000000
 8000018:	20000000 	.word	0x20000000
 800001c:	20000000 	.word	0x20000000

08000020 <Reset_Handler>:

/* reset handler */
.section .text
Reset_Handler:
	/* set stack pointer */
	ldr r0, =_estack
 8000020:	484e      	ldr	r0, [pc, #312]	; (800015c <changeAlperen+0x18>)
	mov sp, r0
 8000022:	4685      	mov	sp, r0

	/* initialize data and bss 
	 * not necessary for rom only code 
	 * */
	bl init_data
 8000024:	f000 f803 	bl	800002e <init_data>
	/* call main */
	bl main
 8000028:	f000 f816 	bl	8000058 <main>
	/* trap if returned */
	b .
 800002c:	e7fe      	b.n	800002c <Reset_Handler+0xc>

0800002e <init_data>:
/* initialize data and bss sections */
.section .text
init_data:

	/* copy rom to ram */
	ldr r0, =_sdata
 800002e:	484c      	ldr	r0, [pc, #304]	; (8000160 <changeAlperen+0x1c>)
	ldr r1, =_edata
 8000030:	494c      	ldr	r1, [pc, #304]	; (8000164 <changeAlperen+0x20>)
	ldr r2, =_sidata
 8000032:	4a4d      	ldr	r2, [pc, #308]	; (8000168 <changeAlperen+0x24>)
	movs r3, #0
 8000034:	2300      	movs	r3, #0
	b LoopCopyDataInit
 8000036:	e002      	b.n	800003e <LoopCopyDataInit>

08000038 <CopyDataInit>:

	CopyDataInit:
		ldr r4, [r2, r3]
 8000038:	58d4      	ldr	r4, [r2, r3]
		str r4, [r0, r3]
 800003a:	50c4      	str	r4, [r0, r3]
		adds r3, r3, #4
 800003c:	3304      	adds	r3, #4

0800003e <LoopCopyDataInit>:

	LoopCopyDataInit:
		adds r4, r0, r3
 800003e:	18c4      	adds	r4, r0, r3
		cmp r4, r1
 8000040:	428c      	cmp	r4, r1
		bcc CopyDataInit
 8000042:	d3f9      	bcc.n	8000038 <CopyDataInit>

	/* zero bss */
	ldr r2, =_sbss
 8000044:	4a49      	ldr	r2, [pc, #292]	; (800016c <changeAlperen+0x28>)
	ldr r4, =_ebss
 8000046:	4c4a      	ldr	r4, [pc, #296]	; (8000170 <changeAlperen+0x2c>)
	movs r3, #0
 8000048:	2300      	movs	r3, #0
	b LoopFillZerobss
 800004a:	e001      	b.n	8000050 <LoopFillZerobss>

0800004c <FillZerobss>:

	FillZerobss:
		str  r3, [r2]
 800004c:	6013      	str	r3, [r2, #0]
		adds r2, r2, #4
 800004e:	3204      	adds	r2, #4

08000050 <LoopFillZerobss>:

	LoopFillZerobss:
		cmp r2, r4
 8000050:	42a2      	cmp	r2, r4
		bcc FillZerobss
 8000052:	d3fb      	bcc.n	800004c <FillZerobss>

	bx lr
 8000054:	4770      	bx	lr

08000056 <Default_Handler>:


/* default handler */
.section .text
Default_Handler:
	b Default_Handler
 8000056:	e7fe      	b.n	8000056 <Default_Handler>

08000058 <main>:

/* main function */
.section .text
main:
	/* enable GPIOB clock, bit2 on IOPENR */
	ldr r6, =RCC_IOPENR
 8000058:	4e46      	ldr	r6, [pc, #280]	; (8000174 <changeAlperen+0x30>)
	ldr r5, [r6]
 800005a:	6835      	ldr	r5, [r6, #0]
	/* movs expects imm8, so this should be fine */
	movs r4, 0x3
 800005c:	2403      	movs	r4, #3
	orrs r5, r5, r4
 800005e:	4325      	orrs	r5, r4
	str r5, [r6]
 8000060:	6035      	str	r5, [r6, #0]




	/* setup PC6 for led 01 for bits 12-13 in MODER */
	ldr r6, =GPIOA_MODER
 8000062:	4e45      	ldr	r6, [pc, #276]	; (8000178 <changeAlperen+0x34>)
	ldr r5, [r6]
 8000064:	6835      	ldr	r5, [r6, #0]
	/* cannot do with movs, so use pc relative */
	ldr r4, =0x3000
 8000066:	4c45      	ldr	r4, [pc, #276]	; (800017c <changeAlperen+0x38>)
	mvns r4, r4
 8000068:	43e4      	mvns	r4, r4
	ands r5, r5, r4
 800006a:	4025      	ands	r5, r4
	ldr r4, =0x1000
 800006c:	4c44      	ldr	r4, [pc, #272]	; (8000180 <changeAlperen+0x3c>)
	orrs r5, r5, r4
 800006e:	4325      	orrs	r5, r4
	str r5, [r6]
 8000070:	6035      	str	r5, [r6, #0]

	/* turn on led connected to C6 in ODR */
	ldr r6, =GPIOA_ODR
 8000072:	4e44      	ldr	r6, [pc, #272]	; (8000184 <changeAlperen+0x40>)
	ldr r5, [r6]
 8000074:	6835      	ldr	r5, [r6, #0]
	movs r4, 0x40
 8000076:	2440      	movs	r4, #64	; 0x40
	orrs r5, r5, r4
 8000078:	4325      	orrs	r5, r4
	str r5, [r6]
 800007a:	6035      	str	r5, [r6, #0]

	/* setup PC6 for led 01 for bits 12-13 in MODER */
	ldr r6, =GPIOB_MODER
 800007c:	4e42      	ldr	r6, [pc, #264]	; (8000188 <changeAlperen+0x44>)
	ldr r5, [r6]
 800007e:	6835      	ldr	r5, [r6, #0]
	/* cannot do with movs, so use pc relative */
	ldr r4, =0x1555
 8000080:	4c42      	ldr	r4, [pc, #264]	; (800018c <changeAlperen+0x48>)
	ands r5, r5, r4
 8000082:	4025      	ands	r5, r4
	str r5, [r6]
 8000084:	6035      	str	r5, [r6, #0]
	movs r0 , #0x0
 8000086:	2000      	movs	r0, #0
	movs r1 , #0x9
 8000088:	2109      	movs	r1, #9

	b loop
 800008a:	e7ff      	b.n	800008c <loop>

0800008c <loop>:



loop:

	ldr r6, =GPIOB_IDR
 800008c:	4e40      	ldr	r6, [pc, #256]	; (8000190 <changeAlperen+0x4c>)
	ldr r5, [r6]
 800008e:	6835      	ldr	r5, [r6, #0]
	lsrs r3,r5,#7 // Ã¼st button
 8000090:	09eb      	lsrs	r3, r5, #7
	lsrs r2,r5,#8 // alt button
 8000092:	0a2a      	lsrs	r2, r5, #8
	cmp r3, #0x1
 8000094:	2b01      	cmp	r3, #1
	beq changeButtonOne
 8000096:	d002      	beq.n	800009e <changeButtonOne>
	cmp r2, #0x1
 8000098:	2a01      	cmp	r2, #1
	beq changeButtonTwo
 800009a:	d006      	beq.n	80000aa <changeButtonTwo>
	b loop
 800009c:	e7f6      	b.n	800008c <loop>

0800009e <changeButtonOne>:

changeButtonOne:
	movs r2, #0x0
 800009e:	2200      	movs	r2, #0
	ldr r3,=0xffffff
 80000a0:	4b3c      	ldr	r3, [pc, #240]	; (8000194 <changeAlperen+0x50>)
	cmp r0, #0x1
 80000a2:	2801      	cmp	r0, #1
	beq changeBahadir
 80000a4:	d03c      	beq.n	8000120 <changeBahadir>
	blt changeHakan
 80000a6:	db44      	blt.n	8000132 <changeHakan>
	bgt changeAlperen
 80000a8:	dc4c      	bgt.n	8000144 <changeAlperen>

080000aa <changeButtonTwo>:
changeButtonTwo:
	movs r2, #0x0
 80000aa:	2200      	movs	r2, #0
	ldr r3,=0xffffff
 80000ac:	4b39      	ldr	r3, [pc, #228]	; (8000194 <changeAlperen+0x50>)
	cmp r1, #0x0
 80000ae:	2900      	cmp	r1, #0
	beq r4Zero
 80000b0:	d021      	beq.n	80000f6 <r4Zero>
	cmp r1, #0x1
 80000b2:	2901      	cmp	r1, #1
	beq r4One
 80000b4:	d021      	beq.n	80000fa <r4One>
	cmp r1, #0x2
 80000b6:	2902      	cmp	r1, #2
	beq r4Two
 80000b8:	d021      	beq.n	80000fe <r4Two>
	cmp r1, #0x3
 80000ba:	2903      	cmp	r1, #3
	beq r4Three
 80000bc:	d021      	beq.n	8000102 <r4Three>
	cmp r1, #0x4
 80000be:	2904      	cmp	r1, #4
	beq r4Four
 80000c0:	d021      	beq.n	8000106 <r4Four>
	cmp r1, #0x5
 80000c2:	2905      	cmp	r1, #5
	beq r4Five
 80000c4:	d021      	beq.n	800010a <r4Five>
	cmp r1, #0x6
 80000c6:	2906      	cmp	r1, #6
	beq r4Six
 80000c8:	d021      	beq.n	800010e <r4Six>
	cmp r1, #0x7
 80000ca:	2907      	cmp	r1, #7
	beq r4Seven
 80000cc:	d021      	beq.n	8000112 <r4Seven>
	cmp r1, #0x8
 80000ce:	2908      	cmp	r1, #8
	beq r4ZEight
 80000d0:	d021      	beq.n	8000116 <r4ZEight>
	cmp r1, #0x9
 80000d2:	2909      	cmp	r1, #9
	beq r4Nine
 80000d4:	d021      	beq.n	800011a <r4Nine>
	bne loop
 80000d6:	d1d9      	bne.n	800008c <loop>

080000d8 <delay>:
delay:
	adds r2,r2,#0x4
 80000d8:	3204      	adds	r2, #4
	cmp r2,r3
 80000da:	429a      	cmp	r2, r3
	blt delay
 80000dc:	dbfc      	blt.n	80000d8 <delay>
	b changeButtonTwo
 80000de:	e7e4      	b.n	80000aa <changeButtonTwo>

080000e0 <DelayForOne>:
DelayForOne:
	adds r2,r2,#0x6
 80000e0:	3206      	adds	r2, #6
	cmp r2,r3
 80000e2:	429a      	cmp	r2, r3
	blt DelayForOne
 80000e4:	dbfc      	blt.n	80000e0 <DelayForOne>
	b loop
 80000e6:	e7d1      	b.n	800008c <loop>

080000e8 <lightTheCandle>:
lightTheCandle:
	ldr r6, =GPIOB_ODR
 80000e8:	4e2b      	ldr	r6, [pc, #172]	; (8000198 <changeAlperen+0x54>)
	ldr r5, [r6]
 80000ea:	6835      	ldr	r5, [r6, #0]
	orrs r5,r5,r4
 80000ec:	4325      	orrs	r5, r4
	mvns r5,r4
 80000ee:	43e5      	mvns	r5, r4
	#lsls r5,r5,#25
	str r5 , [r6]
 80000f0:	6035      	str	r5, [r6, #0]
	subs r1,r1,#1
 80000f2:	3901      	subs	r1, #1
	b delay
 80000f4:	e7f0      	b.n	80000d8 <delay>

080000f6 <r4Zero>:
r4Zero:
	movs r4, #0x3f
 80000f6:	243f      	movs	r4, #63	; 0x3f
	b lightTheCandle
 80000f8:	e7f6      	b.n	80000e8 <lightTheCandle>

080000fa <r4One>:
r4One:
	movs r4, #0x06
 80000fa:	2406      	movs	r4, #6
	b lightTheCandle
 80000fc:	e7f4      	b.n	80000e8 <lightTheCandle>

080000fe <r4Two>:
r4Two:
	movs r4, #0x5b
 80000fe:	245b      	movs	r4, #91	; 0x5b
	b lightTheCandle
 8000100:	e7f2      	b.n	80000e8 <lightTheCandle>

08000102 <r4Three>:
r4Three:
	movs r4, #0x4f
 8000102:	244f      	movs	r4, #79	; 0x4f
	b lightTheCandle
 8000104:	e7f0      	b.n	80000e8 <lightTheCandle>

08000106 <r4Four>:
r4Four:
	movs r4, #0x66
 8000106:	2466      	movs	r4, #102	; 0x66
	b lightTheCandle
 8000108:	e7ee      	b.n	80000e8 <lightTheCandle>

0800010a <r4Five>:
r4Five:
	movs r4, #0x6d
 800010a:	246d      	movs	r4, #109	; 0x6d
	b lightTheCandle
 800010c:	e7ec      	b.n	80000e8 <lightTheCandle>

0800010e <r4Six>:
r4Six:
	movs r4, #0x7d
 800010e:	247d      	movs	r4, #125	; 0x7d
	b lightTheCandle
 8000110:	e7ea      	b.n	80000e8 <lightTheCandle>

08000112 <r4Seven>:
r4Seven:
	movs r4, #0x07
 8000112:	2407      	movs	r4, #7
	b lightTheCandle
 8000114:	e7e8      	b.n	80000e8 <lightTheCandle>

08000116 <r4ZEight>:
r4ZEight:
	movs r4, #0x7f
 8000116:	247f      	movs	r4, #127	; 0x7f
	b lightTheCandle
 8000118:	e7e6      	b.n	80000e8 <lightTheCandle>

0800011a <r4Nine>:
r4Nine:
	movs r4, #0x67
 800011a:	2467      	movs	r4, #103	; 0x67

	b lightTheCandle
 800011c:	e7e4      	b.n	80000e8 <lightTheCandle>
	b loop
 800011e:	e7b5      	b.n	800008c <loop>

08000120 <changeBahadir>:


changeBahadir:
	movs r1, #0x1
 8000120:	2101      	movs	r1, #1
	ldr r6, =GPIOB_ODR
 8000122:	4e1d      	ldr	r6, [pc, #116]	; (8000198 <changeAlperen+0x54>)
	ldr r5, [r6]
 8000124:	6835      	ldr	r5, [r6, #0]
	movs r4, #0x06
 8000126:	2406      	movs	r4, #6
	orrs r5,r5,r4
 8000128:	4325      	orrs	r5, r4
	mvns r5,r4
 800012a:	43e5      	mvns	r5, r4
	#lsls r5,r5,#25
	str r5 , [r6]
 800012c:	6035      	str	r5, [r6, #0]
	adds r0,r0,#1
 800012e:	3001      	adds	r0, #1
	b DelayForOne
 8000130:	e7d6      	b.n	80000e0 <DelayForOne>

08000132 <changeHakan>:

changeHakan:
	movs r1, #0x3
 8000132:	2103      	movs	r1, #3
	ldr r6, =GPIOB_ODR
 8000134:	4e18      	ldr	r6, [pc, #96]	; (8000198 <changeAlperen+0x54>)
	ldr r5, [r6]
 8000136:	6835      	ldr	r5, [r6, #0]
	movs r4, #0x4f
 8000138:	244f      	movs	r4, #79	; 0x4f
	orrs r5,r5,r4
 800013a:	4325      	orrs	r5, r4
	mvns r5,r4
 800013c:	43e5      	mvns	r5, r4
	#lsls r5,r5,#25
	str r5 , [r6]
 800013e:	6035      	str	r5, [r6, #0]
	adds r0,r0,#1
 8000140:	3001      	adds	r0, #1
	b DelayForOne
 8000142:	e7cd      	b.n	80000e0 <DelayForOne>

08000144 <changeAlperen>:
changeAlperen:
	movs r1, #0x9
 8000144:	2109      	movs	r1, #9
	ldr r6, =GPIOB_ODR
 8000146:	4e14      	ldr	r6, [pc, #80]	; (8000198 <changeAlperen+0x54>)
	ldr r5, [r6]
 8000148:	6835      	ldr	r5, [r6, #0]
	movs r4, #0x67
 800014a:	2467      	movs	r4, #103	; 0x67
	orrs r5,r5,r4
 800014c:	4325      	orrs	r5, r4
	mvns r5,r4
 800014e:	43e5      	mvns	r5, r4
	#lsls r5,r5,#25
	str r5 , [r6]
 8000150:	6035      	str	r5, [r6, #0]
	movs r0, #0
 8000152:	2000      	movs	r0, #0
	b DelayForOne
 8000154:	e7c4      	b.n	80000e0 <DelayForOne>
	/* for(;;); */
	b .
 8000156:	e7fe      	b.n	8000156 <changeAlperen+0x12>

	/* this should never get executed */
	nop
 8000158:	46c0      	nop			; (mov r8, r8)
 800015a:	0000      	.short	0x0000
	ldr r0, =_estack
 800015c:	20002000 	.word	0x20002000
	ldr r0, =_sdata
 8000160:	20000000 	.word	0x20000000
	ldr r1, =_edata
 8000164:	20000000 	.word	0x20000000
	ldr r2, =_sidata
 8000168:	080001a4 	.word	0x080001a4
	ldr r2, =_sbss
 800016c:	20000000 	.word	0x20000000
	ldr r4, =_ebss
 8000170:	20000000 	.word	0x20000000
	ldr r6, =RCC_IOPENR
 8000174:	40021034 	.word	0x40021034
	ldr r6, =GPIOA_MODER
 8000178:	50000000 	.word	0x50000000
	ldr r4, =0x3000
 800017c:	00003000 	.word	0x00003000
	ldr r4, =0x1000
 8000180:	00001000 	.word	0x00001000
	ldr r6, =GPIOA_ODR
 8000184:	50000014 	.word	0x50000014
	ldr r6, =GPIOB_MODER
 8000188:	50000400 	.word	0x50000400
	ldr r4, =0x1555
 800018c:	00001555 	.word	0x00001555
	ldr r6, =GPIOB_IDR
 8000190:	50000410 	.word	0x50000410
	ldr r3,=0xffffff
 8000194:	00ffffff 	.word	0x00ffffff
	ldr r6, =GPIOB_ODR
 8000198:	50000414 	.word	0x50000414

Disassembly of section .init:

0800019c <_init>:
 800019c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800019e:	46c0      	nop			; (mov r8, r8)

Disassembly of section .fini:

080001a0 <_fini>:
 80001a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001a2:	46c0      	nop			; (mov r8, r8)
